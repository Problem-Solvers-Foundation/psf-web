# psf-web
# Disclaimer (under development)

The database is currently running in test mode.

The file backend/seed-projects.js is temporary and will be removed later; it is only used to populate the system with sample projects.

Features under development:

Real Stories Module

Route protection (dashboard restricted to authenticated users).
Hospedagem (firebase)

# üåü Problem Solver Foundation - Website & Dashboard

**Miss√£o:** Impactar 1 bilh√£o de pessoas at√© 2035 (1B2035)

Sistema web completo para gerenciamento de projetos sociais com dashboard administrativo.

---

## üöÄ Tecnologias Utilizadas

### Backend
- **Node.js** + **Express.js** - Servidor e API REST
- **Firebase Firestore** - Banco de dados NoSQL
- **Firebase Admin SDK** - Autentica√ß√£o e gerenciamento
- **JWT** - Tokens de autentica√ß√£o (implementa√ß√£o futura)

### Frontend
- **HTML5** + **CSS3** + **JavaScript Vanilla**
- **Tailwind CSS** - Framework de estiliza√ß√£o
- **Fetch API** - Consumo da API REST

---

## üìÅ Estrutura do Projeto

```
problem-solver-foundation/
‚îú‚îÄ‚îÄ backend/
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ config/
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ firebase.js          # Configura√ß√£o Firebase
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ routes/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ projects.js          # Rotas de projetos
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blog.js              # Rotas do blog
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth.js              # Rotas de autentica√ß√£o
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ controllers/
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ projectController.js # L√≥gica de neg√≥cio
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ server.js                # Servidor principal
‚îÇ   ‚îú‚îÄ‚îÄ serviceAccountKey.json       # Credenciais Firebase (N√ÉO COMMITAR!)
‚îÇ   ‚îú‚îÄ‚îÄ .env                         # Vari√°veis de ambiente
‚îÇ   ‚îú‚îÄ‚îÄ package.json
‚îÇ   ‚îî‚îÄ‚îÄ seed-projects.js             # Script para popular banco
‚îÇ
‚îú‚îÄ‚îÄ frontend/
‚îÇ   ‚îú‚îÄ‚îÄ public/                      # P√°ginas p√∫blicas
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.html               # Home
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ solutions-dynamic.html   # Solu√ß√µes
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ progress-dynamic.html    # Progresso
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ impact-dynamic.html      # Impacto
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blog.html
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ about.html
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ contact.html
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ join.html
‚îÇ   ‚îÇ
‚îÇ   ‚îú‚îÄ‚îÄ dashboard/                   # √Årea administrativa
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.html               # Dashboard principal
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ projects.html            # Gerenciar projetos
‚îÇ   ‚îÇ
‚îÇ   ‚îî‚îÄ‚îÄ assets/
‚îÇ       ‚îú‚îÄ‚îÄ css/
‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ custom.css           # CSS customizado
‚îÇ       ‚îî‚îÄ‚îÄ js/
‚îÇ           ‚îú‚îÄ‚îÄ config.js            # Configura√ß√£o da API
‚îÇ           ‚îú‚îÄ‚îÄ utils.js             # Fun√ß√µes auxiliares
‚îÇ           ‚îî‚îÄ‚îÄ projects.js          # L√≥gica de projetos
‚îÇ
‚îî‚îÄ‚îÄ README.md
```

---

## ‚öôÔ∏è Configura√ß√£o e Instala√ß√£o

### 1. **Pr√©-requisitos**
- Node.js (v14 ou superior)
- Conta no Firebase
- Git

### 2. **Clonar o Reposit√≥rio**
```bash
git clone https://github.com/seu-usuario/problem-solver-foundation.git
cd problem-solver-foundation
```

### 3. **Configurar Backend**

#### a) Instalar depend√™ncias
```bash
cd backend
npm install
```

#### b) Configurar Firebase
1. Acesse: https://console.firebase.google.com/
2. Crie um projeto chamado "problem-solver-foundation"
3. Ative o **Firestore Database** (modo teste)
4. V√° em **Project Settings > Service Accounts**
5. Clique em **"Generate new private key"**
6. Salve o arquivo como `serviceAccountKey.json` na pasta `backend/`

#### c) Criar arquivo .env
```bash
cp .env.example .env
```

Edite o `.env`:
```bash
PORT=3000
NODE_ENV=development
FIREBASE_DATABASE_URL=https://problem-solver-foundation.firebaseio.com
JWT_SECRET=sua_chave_secreta_mude_isso
FRONTEND_URL=http://localhost:5500
```

#### d) Popular banco de dados (opcional)
```bash
node seed-projects.js
```

### 4. **Iniciar Backend**
```bash
npm run dev
```

Servidor rodar√° em: `http://localhost:3000`

### 5. **Configurar Frontend**

#### a) Servir arquivos HTML

**Op√ß√£o 1: Python**
```bash
cd frontend/public
python3 -m http.server 5500
```

**Op√ß√£o 2: VS Code Live Server**
- Instale a extens√£o "Live Server"
- Clique direito no HTML ‚Üí "Open with Live Server"

**Op√ß√£o 3: Node.js (http-server)**
```bash
npm install -g http-server
cd frontend/public
http-server -p 5500
```

Acesse: `http://localhost:5500`

---

## üîå Endpoints da API

### Projetos

| M√©todo | Endpoint | Descri√ß√£o |
|--------|----------|-----------|
| `GET` | `/api/projects` | Listar todos os projetos |
| `GET` | `/api/projects/:id` | Buscar projeto por ID |
| `GET` | `/api/projects/category/:category` | Buscar por categoria (solutions/progress/impact) |
| `POST` | `/api/projects` | Criar novo projeto |
| `PUT` | `/api/projects/:id` | Atualizar projeto |
| `DELETE` | `/api/projects/:id` | Deletar projeto |
| `PATCH` | `/api/projects/:id/progress` | Atualizar apenas progresso |

### Exemplos de Uso

**Listar projetos:**
```bash
curl http://localhost:3000/api/projects
```

**Criar projeto:**
```bash
curl -X POST http://localhost:3000/api/projects \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Novo Projeto",
    "description": "Descri√ß√£o do projeto",
    "category": "solutions",
    "progress": 30,
    "imageUrl": "https://exemplo.com/imagem.jpg",
    "completionDate": "Q1 2026",
    "metrics": {
      "livesImpacted": 5000,
      "volunteersInvolved": 50
    }
  }'
```

---

## üìä Estrutura de Dados (Firestore)

### Cole√ß√£o: `projects`

```json
{
  "id": "auto_gerado",
  "title": "Community Empowerment Program",
  "description": "Empowering local communities...",
  "category": "progress",
  "progress": 75,
  "imageUrl": "https://...",
  "completionDate": "Q4 2024",
  "isPublished": true,
  "createdAt": "2025-10-07T03:00:00.000Z",
  "updatedAt": "2025-10-07T03:00:00.000Z",
  "metrics": {
    "livesImpacted": 15000,
    "volunteersInvolved": 120
  }
}
```

**Categorias v√°lidas:**
- `solutions` - Solu√ß√µes inovadoras
- `progress` - Projetos em andamento
- `impact` - Impacto alcan√ßado

---

## üé® P√°ginas P√∫blicas

| P√°gina | URL | Descri√ß√£o |
|--------|-----|-----------|
| Home | `/index.html` | P√°gina inicial |
| Solutions | `/solutions-dynamic.html` | Solu√ß√µes inovadoras |
| Progress | `/progress-dynamic.html` | Projetos em andamento |
| Impact | `/impact-dynamic.html` | Impacto gerado |
| Blog | `/blog.html` | Artigos e not√≠cias |
| About | `/about.html` | Sobre a funda√ß√£o |
| Contact | `/contact.html` | Formul√°rio de contato |
| Join | `/join.html` | Cadastro de Volunteers |

---

## üñ•Ô∏è Dashboard Administrativo

Acesse: `/dashboard/index.html`

**Funcionalidades:**
- ‚úÖ Visualizar estat√≠sticas gerais
- ‚úÖ Listar todos os projetos
- ‚úÖ Criar novos projetos
- ‚úÖ Editar projetos existentes
- ‚úÖ Deletar projetos
- ‚úÖ Filtrar por categoria
- üîú Gerenciar blog posts
- üîú Gerenciar Volunteers
- üîú Sistema de autentica√ß√£o

---

## üöÄ Deploy

### Backend (Heroku/Railway)

**Heroku:**
```bash
heroku create psf-backend
git subtree push --prefix backend heroku main
```

**Railway:**
1. Conecte o reposit√≥rio GitHub
2. Selecione a pasta `backend`
3. Configure as vari√°veis de ambiente

### Frontend (Vercel/Netlify)

**Vercel:**
```bash
cd frontend
vercel
```

**Netlify:**
1. Arraste a pasta `frontend` para netlify.com/drop
2. Configure redirects se necess√°rio

---

## üîí Seguran√ßa

### Firestore Rules (Produ√ß√£o)

```javascript
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Projetos: Leitura p√∫blica, escrita apenas autenticados
    match /projects/{project} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Blog: Leitura p√∫blica, escrita apenas autenticados
    match /blogPosts/{post} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}
```

---

## üêõ Troubleshooting

### Erro: CORS blocked
**Solu√ß√£o:** Certifique-se que o backend tem `cors()` configurado no `server.js`

### Erro: Port already in use
**Solu√ß√£o:** 
```bash
sudo kill -9 $(lsof -ti:3000)
```

### Erro: Firebase index required
**Solu√ß√£o:** Clique no link fornecido no erro para criar o √≠ndice automaticamente

### Projetos n√£o aparecem
**Verificar:**
1. Backend est√° rodando? `http://localhost:3000`
2. Firestore tem dados? Verifique no Firebase Console
3. Console do navegador tem erros? Abra DevTools (F12)

---

## üìà Roadmap

### Fase 1 - MVP ‚úÖ (Conclu√≠da)
- [x] Backend API com Node.js + Express
- [x] Integra√ß√£o com Firestore
- [x] CRUD de projetos
- [x] Frontend din√¢mico (Solutions, Progress, Impact)
- [x] Dashboard administrativo b√°sico

### Fase 2 - Autentica√ß√£o üîÑ (Em andamento)
- [ ] Sistema de login/registro
- [ ] JWT tokens
- [ ] Rotas protegidas
- [ ] Gerenciamento de permiss√µes

### Fase 3 - Blog Din√¢mico
- [ ] CRUD de posts
- [ ] Editor rich text
- [ ] Categorias e tags
- [ ] Coment√°rios

### Fase 4 - Volunteers
- [ ] Sistema de inscri√ß√£o
- [ ] Aprova√ß√£o de candidatos
- [ ] Painel de Volunteers
- [ ] Notifica√ß√µes por email

### Fase 5 - Analytics
- [ ] Dashboard de m√©tricas
- [ ] Gr√°ficos de impacto
- [ ] Relat√≥rios export√°veis
- [ ] Integra√ß√£o com Google Analytics

---

## üë• Contribuindo

1. Fork o projeto
2. Crie uma branch: `git checkout -b feature/nova-funcionalidade`
3. Commit: `git commit -m 'Add nova funcionalidade'`
4. Push: `git push origin feature/nova-funcionalidade`
5. Abra um Pull Request

---

## üìÑ Licen√ßa

MIT License - veja LICENSE.md para detalhes

---

## üìû Contato

**Problem Solver Foundation**
- Website: https://psf.org
- Email: info@problemsolver.org
- GitHub: https://github.com/problem-solver-foundation

---

## üôè Agradecimentos

Constru√≠do com ‚ù§Ô∏è para impactar 1 bilh√£o de vidas at√© 2035.

**#1B2035**