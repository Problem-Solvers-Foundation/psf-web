<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= post ? 'Edit Post' : 'New Post' %> - Admin Panel</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: "#117dd4"
          }
        }
      }
    };
  </script>
  <!-- Quill Editor CSS -->
  <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
  <style>
    /* Ensure Quill editor is clickable and editable */
    #editor-container {
      border: 1px solid #e5e7eb;
      border-radius: 0.5rem;
      background: white;
    }
    .ql-toolbar.ql-snow {
      border-top-left-radius: 0.5rem;
      border-top-right-radius: 0.5rem;
      border: none;
      border-bottom: 1px solid #e5e7eb;
      background: #f9fafb;
    }
    .ql-container.ql-snow {
      border: none;
      font-size: 16px;
    }
    .ql-editor {
      min-height: 400px;
      cursor: text;
      padding: 1rem;
    }
    .ql-editor:focus {
      outline: none;
    }
    .ql-editor.ql-blank::before {
      color: #9ca3af;
      font-style: normal;
    }
    /* Make sure toolbar buttons are visible */
    .ql-toolbar button {
      cursor: pointer;
    }
    .ql-toolbar button:hover {
      background: #e5e7eb;
    }
  </style>
</head>
<body class="bg-gray-50">

  <!-- Header -->
  <header class="bg-white border-b border-gray-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center py-4">
        <div class="flex items-center gap-4">
          <a href="/admin/dashboard" class="text-gray-600 hover:text-primary">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
            </svg>
          </a>
          <h1 class="text-xl font-bold text-gray-900"><%= post ? 'Edit Post' : 'New Post' %></h1>
        </div>
        <div class="flex items-center gap-3">
          <button type="button" onclick="saveAsDraft()" class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 font-semibold hover:bg-gray-50">
            Save Draft
          </button>
          <button type="button" onclick="publishPost()" class="px-6 py-2 bg-primary text-white rounded-lg font-bold hover:bg-opacity-90">
            Publish
          </button>
        </div>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

    <form id="post-form" action="<%= post ? `/admin/posts/edit/${post.id}` : '/admin/posts/create' %>" method="POST">

      <!-- Title -->
      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <label for="title" class="block text-sm font-semibold text-gray-700 mb-2">Title</label>
        <input
          type="text"
          id="title"
          name="title"
          required
          value="<%= post ? post.title : '' %>"
          class="w-full text-3xl font-bold border-0 focus:ring-0 focus:outline-none"
          placeholder="Post title..."
          onkeyup="generateSlug()"
        />
      </div>

      <!-- Slug -->
      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <label for="slug" class="block text-sm font-semibold text-gray-700 mb-2">URL Slug</label>
        <div class="flex items-center gap-2">
          <span class="text-gray-500">/blog/</span>
          <input
            type="text"
            id="slug"
            name="slug"
            required
            value="<%= post ? post.slug : '' %>"
            class="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary"
            placeholder="url-slug-here"
          />
        </div>
      </div>

      <!-- Excerpt -->
      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <label for="excerpt" class="block text-sm font-semibold text-gray-700 mb-2">Excerpt (Summary)</label>
        <textarea
          id="excerpt"
          name="excerpt"
          rows="3"
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary"
          placeholder="Brief summary of the post..."
        ><%= post ? post.excerpt : '' %></textarea>
      </div>

      <!-- Content Editor -->
      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <label class="block text-sm font-semibold text-gray-700 mb-2">Content</label>
        <div id="editor-container">
          <div id="editor"></div>
        </div>
        <input type="hidden" name="content" id="content-input">
        <!-- Store initial content separately -->
        <textarea id="initial-content" style="display:none;"><%= post && post.content ? post.content : '' %></textarea>
      </div>

      <!-- Sidebar -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">

        <!-- Category -->
        <div class="bg-white rounded-lg shadow p-6">
          <label for="category" class="block text-sm font-semibold text-gray-700 mb-2">Category</label>
          <select
            id="category"
            name="category"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary"
          >
            <option value="">Select category...</option>
            <option value="Announcements" <%= post && post.category === 'Announcements' ? 'selected' : '' %>>Announcements (Blog)</option>
            <option value="Technology" <%= post && post.category === 'Technology' ? 'selected' : '' %>>Technology (Blog)</option>
            <option value="Impact" <%= post && post.category === 'Impact' ? 'selected' : '' %>>Impact (Blog)</option>
            <option value="Updates" <%= post && post.category === 'Updates' ? 'selected' : '' %>>Updates (Blog)</option>
            <option value="Stories" <%= post && post.category === 'Stories' ? 'selected' : '' %>>Stories (Impact Page)</option>
            <option value="Resonance" <%= post && post.category === 'Resonance' ? 'selected' : '' %>>Resonance (Home - Voices)</option>
          </select>
        </div>

        <!-- Author -->
        <div class="bg-white rounded-lg shadow p-6">
          <label for="author" class="block text-sm font-semibold text-gray-700 mb-2">Author</label>
          <input
            type="text"
            id="author"
            name="author"
            required
            value="<%= post ? post.author : 'PSF Team' %>"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary"
            placeholder="Author name"
          />
        </div>

      </div>

      <!-- Image and Tags -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">

        <!-- Featured Image -->
        <div class="bg-white rounded-lg shadow p-6">
          <label for="imageUrl" class="block text-sm font-semibold text-gray-700 mb-2">Featured Image URL</label>
          <input
            type="url"
            id="imageUrl"
            name="imageUrl"
            value="<%= post ? post.imageUrl : '' %>"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary"
            placeholder="https://example.com/image.jpg"
          />
          <p class="text-xs text-gray-500 mt-2">Use Unsplash or any image URL</p>
        </div>

        <!-- Tags -->
        <div class="bg-white rounded-lg shadow p-6">
          <label for="tags" class="block text-sm font-semibold text-gray-700 mb-2">Tags</label>
          <input
            type="text"
            id="tags"
            name="tags"
            value="<%= post && post.tags ? post.tags.join(', ') : '' %>"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary"
            placeholder="tag1, tag2, tag3"
          />
          <p class="text-xs text-gray-500 mt-2">Separate with commas</p>
        </div>

      </div>

      <!-- Published Status -->
      <input type="hidden" name="isPublished" id="isPublished" value="<%= post && post.isPublished !== undefined ? post.isPublished : 'true' %>">

    </form>

  </main>

  <!-- Load Quill Editor JS -->
  <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

  <script>
    // Initialize Quill immediately after it's loaded
    let quill;
    let retryCount = 0;
    const maxRetries = 5;

    function initializeQuill() {
      console.log('DOM loaded, checking Quill... (attempt', retryCount + 1, '/', maxRetries, ')');

      // Check if Quill is available
      if (typeof Quill === 'undefined') {
        retryCount++;
        if (retryCount < maxRetries) {
          console.warn('⚠️ Quill is not loaded! Retrying in 500ms...');
          // Retry after a short delay in case the script is still loading
          setTimeout(initializeQuill, 500);
          return;
        } else {
          console.error('❌ Failed to load Quill after', maxRetries, 'attempts');
          // Show error message in the editor area
          const editorElement = document.getElementById('editor');
          if (editorElement) {
            editorElement.innerHTML = '<div style="padding: 20px; text-align: center; color: #dc2626; border: 2px solid #dc2626; border-radius: 8px; background: #fef2f2;"><h3 style="margin: 0 0 10px 0;">❌ Editor Failed to Load</h3><p style="margin: 0;">The text editor could not be loaded due to Content Security Policy restrictions.</p><p style="margin: 10px 0 0 0; font-size: 14px;">Please check the browser console for details or contact support.</p></div>';
          }
          return;
        }
      }

      console.log('✅ Quill library loaded successfully');

      // Check if editor element exists
      const editorElement = document.getElementById('editor');
      if (!editorElement) {
        console.error('Editor element not found!');
        return;
      }

      console.log('Editor element found, initializing Quill...');

      try {
        // Initialize Quill editor
        quill = new Quill('#editor', {
          theme: 'snow',
          placeholder: 'Write your post content here...',
          modules: {
            toolbar: [
              [{ 'header': [1, 2, 3, false] }],
              ['bold', 'italic', 'underline', 'strike'],
              ['blockquote', 'code-block'],
              [{ 'list': 'ordered'}, { 'list': 'bullet' }],
              [{ 'color': [] }, { 'background': [] }],
              [{ 'align': [] }],
              ['link', 'image'],
              ['clean']
            ]
          }
        });

        console.log('✅ Quill editor initialized successfully');

        // Load initial content if editing
        const initialContent = document.getElementById('initial-content').value;
        if (initialContent && initialContent.trim() !== '') {
          console.log('Loading initial content...', initialContent.substring(0, 100));
          quill.root.innerHTML = initialContent;
        }

        // Enable editor explicitly
        quill.enable();

        // Focus on editor to show it's ready
        setTimeout(() => {
          quill.focus();
        }, 100);

        console.log('Editor is ready for input');

        // Make quill globally accessible for debugging
        window.quillEditor = quill;

        // Setup form submit handler HERE (inside initializeQuill where quill is available)
        const form = document.getElementById('post-form');
        if (form) {
          form.addEventListener('submit', function(e) {
            console.log('📤 Form submitting...');
            const content = quill.root.innerHTML;
            const hiddenInput = document.getElementById('content-input');
            hiddenInput.value = content;
            console.log('✅ Content saved to hidden input');
            console.log('   Length:', content.length);
            console.log('   Preview:', content.substring(0, 150) + '...');
            // Let the form submit normally
          });
          console.log('✅ Form submit handler attached');
        } else {
          console.error('❌ Form not found!');
        }

      } catch (error) {
        console.error('Error initializing Quill:', error);
        alert('Failed to initialize editor: ' + error.message);
      }
    }

    // Try to initialize when DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializeQuill);
    } else {
      // DOM is already ready
      initializeQuill();
    }

    // Generate slug from title
    function generateSlug() {
      const title = document.getElementById('title').value;
      const slug = title
        .toLowerCase()
        .replace(/[^\w\s-]/g, '')
        .replace(/\s+/g, '-')
        .replace(/--+/g, '-')
        .trim();
      document.getElementById('slug').value = slug;
    }

    // Save as draft
    function saveAsDraft() {
      console.log('💾 Saving as draft...');
      // Save content from Quill to hidden input FIRST
      if (window.quillEditor) {
        const content = window.quillEditor.root.innerHTML;
        document.getElementById('content-input').value = content;
        console.log('Content saved before draft submit. Length:', content.length);
      } else {
        console.warn('⚠️ Quill editor not found!');
      }
      document.getElementById('isPublished').value = 'false';
      document.getElementById('post-form').submit();
    }

    // Publish post
    function publishPost() {
      console.log('🚀 Publishing post...');
      // Save content from Quill to hidden input FIRST
      if (window.quillEditor) {
        const content = window.quillEditor.root.innerHTML;
        document.getElementById('content-input').value = content;
        console.log('Content saved before publish. Length:', content.length);
      } else {
        console.warn('⚠️ Quill editor not found!');
      }
      document.getElementById('isPublished').value = 'true';
      document.getElementById('post-form').submit();
    }
  </script>

</body>
</html>
